{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 10, "column": 0}, "map": {"version":3,"sources":["file:///home/evanlivelo/3_resources/repos/me/learn-with-genai/frontend/src/components/Sidebar.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\n\ninterface SidebarProps {\n  collapsed: boolean;\n  onToggle: () => void;\n}\n\ninterface Project {\n  id: string;\n  name: string;\n  files: FileItem[];\n}\n\ninterface FileItem {\n  id: string;\n  name: string;\n  type: 'file' | 'folder';\n  children?: FileItem[];\n}\n\nexport default function Sidebar({ collapsed, onToggle }: SidebarProps) {\n  const [selectedFolder, setSelectedFolder] = useState<string | null>(null);\n  const [selectedProject, setSelectedProject] = useState<string | null>(null);\n  const [expandedFolders, setExpandedFolders] = useState<Set<string>>(new Set());\n\n  // Mock data\n  const [projects] = useState<Project[]>([\n    {\n      id: 'project1',\n      name: 'Machine Learning Notes',\n      files: [\n        { id: 'file1', name: 'introduction.md', type: 'file' },\n        { id: 'file2', name: 'neural-networks.md', type: 'file' },\n        {\n          id: 'folder1',\n          name: 'algorithms',\n          type: 'folder',\n          children: [\n            { id: 'file3', name: 'linear-regression.md', type: 'file' },\n            { id: 'file4', name: 'decision-trees.md', type: 'file' },\n          ],\n        },\n      ],\n    },\n    {\n      id: 'project2',\n      name: 'Web Development',\n      files: [\n        { id: 'file5', name: 'react-basics.md', type: 'file' },\n        { id: 'file6', name: 'nextjs-guide.md', type: 'file' },\n      ],\n    },\n  ]);\n\n  const toggleFolder = (folderId: string) => {\n    const newExpanded = new Set(expandedFolders);\n    if (newExpanded.has(folderId)) {\n      newExpanded.delete(folderId);\n    } else {\n      newExpanded.add(folderId);\n    }\n    setExpandedFolders(newExpanded);\n  };\n\n  const selectBaseFolder = () => {\n    // Mock function for selecting base folder\n    setSelectedFolder('/home/user/learning-notes');\n    setSelectedProject(null); // Reset project selection when changing base folder\n    alert('Mock: Selected base folder \"/home/user/learning-notes\"');\n  };\n\n  const renderFileTree = (items: FileItem[], level = 0) => {\n    return items.map((item) => (\n      <div key={item.id} style={{ marginLeft: `${level * 16}px` }}>\n        <div\n          className=\"flex items-center py-1 px-2 hover:bg-gray-200 dark:hover:bg-gray-700 cursor-pointer rounded\"\n          onClick={() => {\n            if (item.type === 'folder') {\n              toggleFolder(item.id);\n            } else {\n              // Handle file selection\n              console.log('Selected file:', item.name);\n            }\n          }}\n        >\n          {item.type === 'folder' ? (\n            <span className=\"mr-2\">\n              {expandedFolders.has(item.id) ? 'üìÇ' : 'üìÅ'}\n            </span>\n          ) : (\n            <span className=\"mr-2\">üìÑ</span>\n          )}\n          <span className=\"text-sm truncate\">{item.name}</span>\n        </div>\n        {item.type === 'folder' && expandedFolders.has(item.id) && item.children && (\n          <div>{renderFileTree(item.children, level + 1)}</div>\n        )}\n      </div>\n    ));\n  };\n\n  if (collapsed) {\n    return (\n      <div className=\"h-full bg-white dark:bg-gray-800 border-r border-gray-300 dark:border-gray-700 p-2\">\n        <button\n          onClick={onToggle}\n          className=\"w-full h-8 flex items-center justify-center hover:bg-gray-200 dark:hover:bg-gray-700 rounded\"\n          title=\"Expand sidebar\"\n        >\n          <span className=\"text-lg\">üìÅ</span>\n        </button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"h-full bg-white dark:bg-gray-800 border-r border-gray-300 dark:border-gray-700 flex flex-col\">\n      {/* Header */}\n      <div className=\"p-3 border-b border-gray-300 dark:border-gray-700 flex items-center justify-between\">\n        <h2 className=\"font-semibold text-gray-800 dark:text-gray-200\">Explorer</h2>\n        <button\n          onClick={onToggle}\n          className=\"p-1 hover:bg-gray-200 dark:hover:bg-gray-700 rounded\"\n          title=\"Collapse sidebar\"\n        >\n          <span className=\"text-sm\">‚óÄ</span>\n        </button>\n      </div>\n\n      {/* Base Folder Selection */}\n      <div className=\"p-3 border-b border-gray-300 dark:border-gray-700\">\n        <button\n          onClick={selectBaseFolder}\n          className=\"w-full px-3 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 text-sm\"\n        >\n          Select Base Folder\n        </button>\n      </div>\n\n      {/* Projects List */}\n      <div className=\"flex-1 overflow-y-auto p-2\">\n        {!selectedFolder ? (\n          <div className=\"text-center text-gray-500 dark:text-gray-400 text-sm mt-8 p-4\">\n            <div className=\"mb-4\">üìÅ</div>\n            <div>Select a base folder to see your projects</div>\n          </div>\n        ) : !selectedProject ? (\n          <div className=\"space-y-2\">\n            <div className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-3 px-2\">\n              Select a Project\n            </div>\n            {projects.map((project) => (\n              <div\n                key={project.id}\n                className=\"mx-2 p-3 border border-gray-200 dark:border-gray-600 rounded-lg hover:bg-gray-100 dark:hover:bg-gray-700 cursor-pointer transition-colors\"\n                onClick={() => setSelectedProject(project.id)}\n              >\n                <div className=\"font-medium text-gray-800 dark:text-gray-200 flex items-center\">\n                  <span className=\"mr-2\">üìÇ</span>\n                  {project.name}\n                </div>\n                <div className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\n                  {project.files.length} files\n                </div>\n              </div>\n            ))}\n          </div>\n        ) : (\n          <div className=\"space-y-4\">\n            {/* Back to project selection */}\n            <div className=\"px-2\">\n              <button\n                onClick={() => setSelectedProject(null)}\n                className=\"text-sm text-blue-600 dark:text-blue-400 hover:underline flex items-center\"\n              >\n                <span className=\"mr-1\">‚Üê</span>\n                Back to Projects\n              </button>\n            </div>\n\n            {/* Current project files */}\n            {projects\n              .filter((project) => project.id === selectedProject)\n              .map((project) => (\n                <div key={project.id}>\n                  <div className=\"font-medium text-gray-800 dark:text-gray-200 mb-2 px-2 flex items-center\">\n                    <span className=\"mr-2\">üìÇ</span>\n                    {project.name}\n                  </div>\n                  <div className=\"ml-2\">\n                    {renderFileTree(project.files)}\n                  </div>\n                </div>\n              ))}\n          </div>\n        )}\n      </div>\n\n      {/* Footer Actions */}\n      {selectedFolder && (\n        <div className=\"p-3 border-t border-gray-300 dark:border-gray-700\">\n          <button className=\"w-full px-3 py-2 bg-green-600 text-white rounded hover:bg-green-700 text-sm\">\n            New Project\n          </button>\n        </div>\n      )}\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 409, "column": 0}, "map": {"version":3,"sources":["file:///home/evanlivelo/3_resources/repos/me/learn-with-genai/frontend/src/components/TextEditor.tsx"],"sourcesContent":["'use client';\n\nimport { useEditor, EditorContent } from '@tiptap/react';\nimport StarterKit from '@tiptap/starter-kit';\nimport { useState } from 'react';\n\nexport default function TextEditor() {\n  const [currentFile, setCurrentFile] = useState('untitled.md');\n\n  const editor = useEditor({\n    extensions: [StarterKit],\n    content: '',\n    editorProps: {\n      attributes: {\n        class: 'prose prose-sm max-w-none focus:outline-none min-h-full p-4 dark:prose-invert',\n      },\n    },\n    immediatelyRender: false,\n  });\n\n  const handleSave = () => {\n    if (editor) {\n      const content = editor.getHTML();\n      console.log('Saving content:', content);\n      // Here you would typically save to your backend\n      alert('File saved! (Mock functionality)');\n    }\n  };\n\n  return (\n    <div className=\"h-full flex flex-col bg-white dark:bg-gray-900\">\n      {/* Header with file info */}\n      <div className=\"px-4 py-3 border-b border-gray-300 dark:border-gray-700 bg-gray-50 dark:bg-gray-800\">\n        <div className=\"flex items-center justify-between\">\n          <div className=\"flex items-center space-x-2\">\n            <span className=\"text-sm text-gray-600 dark:text-gray-400\">üìÑ</span>\n            <span className=\"font-medium text-gray-800 dark:text-gray-200\">{currentFile}</span>\n            <span className=\"text-xs text-gray-500 dark:text-gray-400\">‚Ä¢ Modified</span>\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <button\n              onClick={handleSave}\n              className=\"px-3 py-1 text-xs bg-blue-600 text-white rounded hover:bg-blue-700\"\n            >\n              Save\n            </button>\n          </div>\n        </div>\n      </div>\n\n      {/* Editor Area */}\n      <div className=\"flex-1\">\n        <EditorContent\n          editor={editor}\n          className=\"h-full\"\n        />\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAJA;;;;;AAMe,SAAS;IACtB,MAAM,CAAC,aAAa,eAAe,GAAG,IAAA,iNAAQ,EAAC;IAE/C,MAAM,SAAS,IAAA,+KAAS,EAAC;QACvB,YAAY;YAAC,sKAAU;SAAC;QACxB,SAAS;QACT,aAAa;YACX,YAAY;gBACV,OAAO;YACT;QACF;QACA,mBAAmB;IACrB;IAEA,MAAM,aAAa;QACjB,IAAI,QAAQ;YACV,MAAM,UAAU,OAAO,OAAO;YAC9B,QAAQ,GAAG,CAAC,mBAAmB;YAC/B,gDAAgD;YAChD,MAAM;QACR;IACF;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAI,WAAU;;sCACb,8OAAC;4BAAI,WAAU;;8CACb,8OAAC;oCAAK,WAAU;8CAA2C;;;;;;8CAC3D,8OAAC;oCAAK,WAAU;8CAAgD;;;;;;8CAChE,8OAAC;oCAAK,WAAU;8CAA2C;;;;;;;;;;;;sCAE7D,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCACC,SAAS;gCACT,WAAU;0CACX;;;;;;;;;;;;;;;;;;;;;;0BAQP,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,mLAAa;oBACZ,QAAQ;oBACR,WAAU;;;;;;;;;;;;;;;;;AAKpB","debugId":null}},
    {"offset": {"line": 538, "column": 0}, "map": {"version":3,"sources":["file:///home/evanlivelo/3_resources/repos/me/learn-with-genai/frontend/src/components/AIAssistant.tsx"],"sourcesContent":["'use client';\n\nimport { useState } from 'react';\n\ninterface Message {\n  id: string;\n  type: 'user' | 'assistant';\n  content: string;\n  timestamp: Date;\n}\n\ninterface ThinkingStep {\n  id: string;\n  title: string;\n  content: string;\n  completed: boolean;\n}\n\nexport default function AIAssistant() {\n  const [messages, setMessages] = useState<Message[]>([\n    {\n      id: '1',\n      type: 'assistant',\n      content: 'Hello! I\\'m your AI learning assistant. I can help you understand concepts, answer questions about your notes, and provide insights. What would you like to learn about today?',\n      timestamp: new Date(),\n    },\n  ]);\n\n  const [inputText, setInputText] = useState('');\n  const [isThinking, setIsThinking] = useState(false);\n\n  // Mock thinking steps for demonstration\n  const [thinkingSteps] = useState<ThinkingStep[]>([\n    { id: '1', title: 'Analyzing your question', content: 'Understanding the context and requirements...', completed: true },\n    { id: '2', title: 'Searching knowledge base', content: 'Looking through relevant information sources...', completed: true },\n    { id: '3', title: 'Formulating response', content: 'Crafting a comprehensive and helpful answer...', completed: false },\n  ]);\n\n  const handleSendMessage = () => {\n    if (!inputText.trim()) return;\n\n    const userMessage: Message = {\n      id: Date.now().toString(),\n      type: 'user',\n      content: inputText,\n      timestamp: new Date(),\n    };\n\n    setMessages(prev => [...prev, userMessage]);\n    setInputText('');\n    setIsThinking(true);\n\n    // Simulate AI response after 2 seconds\n    setTimeout(() => {\n      const aiResponse: Message = {\n        id: (Date.now() + 1).toString(),\n        type: 'assistant',\n        content: `Great question! Based on your notes and the context, here's what I can tell you: This is a mock response that would normally be generated by the AI backend. The response would be contextually relevant to your question and the current document you're working on.`,\n        timestamp: new Date(),\n      };\n      setMessages(prev => [...prev, aiResponse]);\n      setIsThinking(false);\n    }, 2000);\n  };\n\n  const handleKeyUp = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSendMessage();\n    }\n  };\n\n  return (\n    <div className=\"h-full flex flex-col bg-white dark:bg-gray-900 border-l border-gray-300 dark:border-gray-700\">\n      {/* Header */}\n      <div className=\"p-3 border-b border-gray-300 dark:border-gray-700 bg-gray-50 dark:bg-gray-800\">\n        <h2 className=\"font-semibold text-gray-800 dark:text-gray-200 flex items-center\">\n          <span className=\"mr-2\">ü§ñ</span>\n          AI Assistant\n        </h2>\n      </div>\n\n      {/* Chain of Thought Section */}\n      {isThinking && (\n        <div className=\"p-3 border-b border-gray-300 dark:border-gray-700 bg-blue-50 dark:bg-blue-900/20\">\n          <h3 className=\"text-sm font-medium text-blue-800 dark:text-blue-200 mb-2\">Thinking...</h3>\n          <div className=\"space-y-2\">\n            {thinkingSteps.map((step) => (\n              <div key={step.id} className=\"flex items-start space-x-2\">\n                <div className={`w-4 h-4 rounded-full mt-0.5 flex-shrink-0 ${\n                  step.completed\n                    ? 'bg-green-500'\n                    : 'bg-yellow-500 animate-pulse'\n                }`}>\n                  {step.completed && (\n                    <div className=\"w-full h-full flex items-center justify-center\">\n                      <span className=\"text-white text-xs\">‚úì</span>\n                    </div>\n                  )}\n                </div>\n                <div className=\"flex-1\">\n                  <div className=\"text-xs font-medium text-blue-800 dark:text-blue-200\">\n                    {step.title}\n                  </div>\n                  <div className=\"text-xs text-blue-600 dark:text-blue-300\">\n                    {step.content}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {/* Messages Area */}\n      <div className=\"flex-1 overflow-y-auto p-3 space-y-4\">\n        {messages.map((message) => (\n          <div\n            key={message.id}\n            className={`flex ${message.type === 'user' ? 'justify-end' : 'justify-start'}`}\n          >\n            <div\n              className={`max-w-[85%] rounded-lg p-3 ${\n                message.type === 'user'\n                  ? 'bg-blue-600 text-white'\n                  : 'bg-gray-100 dark:bg-gray-800 text-gray-800 dark:text-gray-200'\n              }`}\n            >\n              <div className=\"text-sm whitespace-pre-wrap\">\n                {message.content}\n              </div>\n              <div\n                className={`text-xs mt-1 ${\n                  message.type === 'user'\n                    ? 'text-blue-100'\n                    : 'text-gray-500 dark:text-gray-400'\n                }`}\n              >\n                {message.timestamp.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' })}\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Input Area */}\n      <div className=\"p-3 border-t border-gray-300 dark:border-gray-700\">\n        <div className=\"flex space-x-2\">\n          <textarea\n            value={inputText}\n            onChange={(e) => setInputText(e.target.value)}\n            onKeyUp={handleKeyUp}\n            placeholder=\"Ask me anything about your notes...\"\n            className=\"flex-1 px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg resize-none focus:outline-none focus:ring-2 focus:ring-blue-500 bg-white dark:bg-gray-800 text-gray-800 dark:text-gray-200\"\n            rows={2}\n          />\n          <button\n            onClick={handleSendMessage}\n            disabled={!inputText.trim() || isThinking}\n            className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed flex items-center justify-center\"\n          >\n            <span className=\"text-sm\">Send</span>\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 820, "column": 0}, "map": {"version":3,"sources":["file:///home/evanlivelo/3_resources/repos/me/learn-with-genai/frontend/src/components/MainLayout.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport Sidebar from './Sidebar';\nimport TextEditor from './TextEditor';\nimport AIAssistant from './AIAssistant';\n\nexport default function MainLayout() {\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n  const [aiPanelWidth, setAiPanelWidth] = useState(30); // percentage\n  const [isResizing, setIsResizing] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const handleMouseDown = useCallback((e: React.MouseEvent) => {\n    setIsResizing(true);\n    e.preventDefault();\n  }, []);\n\n  const handleMouseMove = useCallback((e: MouseEvent) => {\n    if (!isResizing || !containerRef.current) return;\n\n    const containerRect = containerRef.current.getBoundingClientRect();\n    const containerWidth = containerRect.width;\n    const mouseX = e.clientX - containerRect.left;\n\n    // Calculate percentage from the right edge\n    const newWidth = ((containerWidth - mouseX) / containerWidth) * 100;\n\n    // Constrain between 20% and 60%\n    const constrainedWidth = Math.min(Math.max(newWidth, 20), 60);\n    setAiPanelWidth(constrainedWidth);\n  }, [isResizing]);\n\n  const handleMouseUp = useCallback(() => {\n    setIsResizing(false);\n  }, []);\n\n  // Add event listeners for mouse events\n  useEffect(() => {\n    if (isResizing) {\n      document.addEventListener('mousemove', handleMouseMove);\n      document.addEventListener('mouseup', handleMouseUp);\n      document.body.style.cursor = 'col-resize';\n      document.body.style.userSelect = 'none';\n\n      return () => {\n        document.removeEventListener('mousemove', handleMouseMove);\n        document.removeEventListener('mouseup', handleMouseUp);\n        document.body.style.cursor = '';\n        document.body.style.userSelect = '';\n      };\n    }\n  }, [isResizing, handleMouseMove, handleMouseUp]);\n\n  return (\n    <div className=\"h-screen flex bg-gray-50 dark:bg-gray-900\">\n      {/* Left Sidebar */}\n      <div className={`${sidebarCollapsed ? 'w-12' : 'w-64'} transition-all duration-300 ease-in-out`}>\n        <Sidebar\n          collapsed={sidebarCollapsed}\n          onToggle={() => setSidebarCollapsed(!sidebarCollapsed)}\n        />\n      </div>\n\n      {/* Main Content Area */}\n      <div className=\"flex-1 flex relative\" ref={containerRef}>\n        {/* Text Editor */}\n        <div\n          className=\"border-r border-gray-300 dark:border-gray-700\"\n          style={{ width: `${100 - aiPanelWidth}%` }}\n        >\n          <TextEditor />\n        </div>\n\n        {/* Resize Handle */}\n        <div\n          className={`w-1 bg-gray-300 dark:bg-gray-700 hover:bg-blue-500 dark:hover:bg-blue-500 cursor-col-resize transition-colors relative ${\n            isResizing ? 'bg-blue-500' : ''\n          }`}\n          onMouseDown={handleMouseDown}\n        >\n          {/* Visual indicator for resize handle */}\n          <div className=\"absolute inset-y-0 left-0 w-1 flex items-center justify-center\">\n            <div className=\"w-0.5 h-8 bg-gray-400 dark:bg-gray-600 rounded-full opacity-50\"></div>\n          </div>\n        </div>\n\n        {/* AI Assistant Panel */}\n        <div\n          style={{ width: `${aiPanelWidth}%`, minWidth: '250px' }}\n        >\n          <AIAssistant />\n        </div>\n      </div>\n    </div>\n  );\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOe,SAAS;IACtB,MAAM,CAAC,kBAAkB,oBAAoB,GAAG,IAAA,iNAAQ,EAAC;IACzD,MAAM,CAAC,cAAc,gBAAgB,GAAG,IAAA,iNAAQ,EAAC,KAAK,aAAa;IACnE,MAAM,CAAC,YAAY,cAAc,GAAG,IAAA,iNAAQ,EAAC;IAC7C,MAAM,eAAe,IAAA,+MAAM,EAAiB;IAE5C,MAAM,kBAAkB,IAAA,oNAAW,EAAC,CAAC;QACnC,cAAc;QACd,EAAE,cAAc;IAClB,GAAG,EAAE;IAEL,MAAM,kBAAkB,IAAA,oNAAW,EAAC,CAAC;QACnC,IAAI,CAAC,cAAc,CAAC,aAAa,OAAO,EAAE;QAE1C,MAAM,gBAAgB,aAAa,OAAO,CAAC,qBAAqB;QAChE,MAAM,iBAAiB,cAAc,KAAK;QAC1C,MAAM,SAAS,EAAE,OAAO,GAAG,cAAc,IAAI;QAE7C,2CAA2C;QAC3C,MAAM,WAAW,AAAC,CAAC,iBAAiB,MAAM,IAAI,iBAAkB;QAEhE,gCAAgC;QAChC,MAAM,mBAAmB,KAAK,GAAG,CAAC,KAAK,GAAG,CAAC,UAAU,KAAK;QAC1D,gBAAgB;IAClB,GAAG;QAAC;KAAW;IAEf,MAAM,gBAAgB,IAAA,oNAAW,EAAC;QAChC,cAAc;IAChB,GAAG,EAAE;IAEL,uCAAuC;IACvC,IAAA,kNAAS,EAAC;QACR,IAAI,YAAY;YACd,SAAS,gBAAgB,CAAC,aAAa;YACvC,SAAS,gBAAgB,CAAC,WAAW;YACrC,SAAS,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG;YAC7B,SAAS,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG;YAEjC,OAAO;gBACL,SAAS,mBAAmB,CAAC,aAAa;gBAC1C,SAAS,mBAAmB,CAAC,WAAW;gBACxC,SAAS,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG;gBAC7B,SAAS,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG;YACnC;QACF;IACF,GAAG;QAAC;QAAY;QAAiB;KAAc;IAE/C,qBACE,8OAAC;QAAI,WAAU;;0BAEb,8OAAC;gBAAI,WAAW,GAAG,mBAAmB,SAAS,OAAO,wCAAwC,CAAC;0BAC7F,cAAA,8OAAC,wIAAO;oBACN,WAAW;oBACX,UAAU,IAAM,oBAAoB,CAAC;;;;;;;;;;;0BAKzC,8OAAC;gBAAI,WAAU;gBAAuB,KAAK;;kCAEzC,8OAAC;wBACC,WAAU;wBACV,OAAO;4BAAE,OAAO,GAAG,MAAM,aAAa,CAAC,CAAC;wBAAC;kCAEzC,cAAA,8OAAC,2IAAU;;;;;;;;;;kCAIb,8OAAC;wBACC,WAAW,CAAC,uHAAuH,EACjI,aAAa,gBAAgB,IAC7B;wBACF,aAAa;kCAGb,cAAA,8OAAC;4BAAI,WAAU;sCACb,cAAA,8OAAC;gCAAI,WAAU;;;;;;;;;;;;;;;;kCAKnB,8OAAC;wBACC,OAAO;4BAAE,OAAO,GAAG,aAAa,CAAC,CAAC;4BAAE,UAAU;wBAAQ;kCAEtD,cAAA,8OAAC,4IAAW;;;;;;;;;;;;;;;;;;;;;;AAKtB","debugId":null}}]
}